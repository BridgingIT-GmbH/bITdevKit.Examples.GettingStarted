###############################################################################################
## CoreModule Module API Integration Tests                                                   ##
##                                                                                           ##
## This file exercises the full set of endpoints exposed by the CoreModule module            ##
## ----------------------------------------------------------------------------------------- ##
## Endpoints covered:                                                                        ##
##  GET    /api/coremodule/customers/{id}          (Find one)                                ##
##  GET    /api/coremodule/customers               (Find all / list)                         ##
##  POST   /api/coremodule/customers               (Create)                                  ##
##  PUT    /api/coremodule/customers/{id}          (Update)                                  ##
##  PUT    /api/coremodule/customers/{id}/status   (Update status)                           ##
##  DELETE /api/coremodule/customers/{id}          (Delete)                                  ##
##                                                                                           ##
## Variables: (see http-client.env.json)                                                     ##
##  -customerId         A seeded existing customer (read/update/delete scenarios)            ##
##  -concurrencyVersion The concurrency version of the existing customer                     ##
##                                                                                           ##
## ----------------------------------------------------------------------------------------- ##
## Use in Visual Studio: https://learn.microsoft.com/en-us/aspnet/core/test/http-files       ##
###############################################################################################

###############################################################################################
### [GET] Customers - Find One                                                              ###
GET {{baseUrl}}/api/coremodule/customers/{{customerId}} HTTP/1.1

###############################################################################################
### [GET] Customers - Find All                                                              ###
GET {{baseUrl}}/api/coremodule/customers HTTP/1.1

###############################################################################################
### [GET] Customers - Find All filter                                                       ###
GET {{baseUrl}}/api/coremodule/customers?filter={"page":1,"pageSize":10,"filters":[{"field":"firstName","operator":"isnotnull"},{"field":"firstName","operator":"eq","value":"John"}]} HTTP/1.1

###############################################################################################
### [POST] Customers - Search All filter                                                    ###
POST {{baseUrl}}/api/coremodule/customers/search HTTP/1.1
Content-Type: application/json

{
  "page":1,
  "pageSize":10,
  "filters":[
    {"field":"firstName","operator":"isnotnull"},{"field":"firstName","operator":"eq","value":"John"}]
}

###############################################################################################
### [POST] Customers - Create                                                               ###
POST {{baseUrl}}/api/coremodule/customers HTTP/1.1
Content-Type: application/json

{
  "firstName": "John{{$randomInt 1000 9999}}",
  "lastName": "Doe{{$randomInt 1000 9999}}",
  "email": "john.doe{{$randomInt 1000 9999}}@example.com",
  "status": 1
}

###############################################################################################
### [PUT] Customers - Update                                                                ###
PUT {{baseUrl}}/api/coremodule/customers/{{customerId}} HTTP/1.1
Content-Type: application/json

{
  "id": "{{customerId}}",
  "firstName": "John{{$randomInt 1000 9999}}Changed",
  "lastName": "Doe{{$randomInt 1000 9999}}Changed",
  "email": "john.doe{{$randomInt 1000 9999}}changed@example.com",
  "status": 1,
  "concurrencyVersion": "{{concurrencyVersion}}"
}

###############################################################################################
### [PUT] Customers - Change Status -> Active                                               ###
PUT {{baseUrl}}/api/coremodule/customers/{{customerId}}/status HTTP/1.1
Content-Type: application/json

{
  "status": 2
}

###############################################################################################
### [DELETE] Customers - Delete (Created)                                                   ###
### (Idempotent test - expect 204 first time, 404 if repeated)                  ###
DELETE {{baseUrl}}/api/coremodule/customers/{{customerId}} HTTP/1.1



###############################################################################################
### [POST] Customers - Create                                                               ###
### [NEGATIVE] Customers - Invalid first/lastname (empty)                       ###
### (Should return 400)                                                         ###
POST {{baseUrl}}/api/coremodule/customers HTTP/1.1
Content-Type: application/json

{
  "firstName": "",
  "lastName": "",
  "email": "john.doe{{$randomInt 1000 9999}}@example.com",
  "status": 1
}

###############################################################################################
### [PUT] Customers - Update                                                                ###
### [NEGATIVE] Customers - Update invalid concurrencyVersion (Random GUID)      ###
### (Should return 409)                                                         ###
PUT {{baseUrl}}/api/coremodule/customers/{{customerId}} HTTP/1.1
Content-Type: application/json

{
  "id": "{{customerId}}",
  "firstName": "John{{$randomInt 1000 9999}}Changed",
  "lastName": "Doe{{$randomInt 1000 9999}}Changed",
  "email": "john.doe{{$randomInt 1000 9999}}changed@example.com",
  "status": 1,
  "concurrencyVersion": "00000000-0000-0000-0000-000000000001"
}

###############################################################################################
### [GET] Customers - Find One                                                              ###
### [NEGATIVE] Customers - Get Not Found (Random GUID)                          ###
### (Should return 404)                                                         ###
GET {{baseUrl}}/api/coremodule/customers/00000000-0000-0000-0000-000000000001 HTTP/1.1

###############################################################################################
### [PUT] Customers - Update                                                                ###
### [NEGATIVE] Customers - Change invalid status                                ###
### (Should return 400)                                                         ###
PUT {{baseUrl}}/api/coremodule/customers/{{customerId}}/status HTTP/1.1
Content-Type: application/json

{
  "status": 99
}

###############################################################################################
### [DELETE] Customers - Delete                                                             ###
### [NEGATIVE] Customers - Not Found (Random GUID)                              ###
### (Should return 404)                                                         ###
DELETE {{baseUrl}}/api/coremodule/customers/00000000-0000-0000-0000-000000000001 HTTP/1.1

###############################################################################################
### [DELETE] Customers - Delete                                                             ###
### [NEGATIVE] Customers - Not Found (Random GUID)                              ###
### (Should return 404)                                                         ###
DELETE {{baseUrl}}/api/coremodule/customers/exception HTTP/1.1