// MIT-License
// Copyright BridgingIT GmbH - All Rights Reserved
// Use of this source code is governed by an MIT-style license that can be
// found in the LICENSE file at https://github.com/bridgingit/bitdevkit/license

namespace BridgingIT.DevKit.Examples.GettingStarted.Modules.CoreModule.Application;

using BridgingIT.DevKit.Examples.GettingStarted.Modules.CoreModule.Domain.Model;

/// <summary>
/// Data transfer object (DTO) representing a <see cref="Domain.Model.Customer"/>.
/// Used by the application and presentation layers to expose Customers to clients.
/// Mirrors key domain properties in a JSON‑friendly / client‑friendly format.
/// </summary>
public class CustomerModel
{
    /// <summary>
    /// Gets or sets the unique identifier of the customer as a string (Guid).
    /// This value is generated by the domain and serves as the primary key.
    /// </summary>
    public string Id { get; set; }

    /// <summary>
    /// Gets or sets the customer's first name.
    /// Required and limited to 128 characters in persistence.
    /// </summary>
    public string FirstName { get; set; }

    /// <summary>
    /// Gets or sets the customer's last name.
    /// Required and limited to 512 characters in persistence.
    /// </summary>
    public string LastName { get; set; }

    /// <summary>
    /// Gets or sets the customer's email address.
    /// Stored in normalized lowercase form, validated against domain rules.
    /// </summary>
    public string Email { get; set; }

    /// <summary>
    /// Gets or sets the current status of the customer (Enumeration Id).
    /// </summary>
    public int Status { get; set; }

    /// <summary>
    /// Gets or sets the concurrency version (as a string Guid).
    /// Used for optimistic concurrency control to prevent conflicting updates.
    /// </summary>
    public string ConcurrencyVersion { get; set; }
}